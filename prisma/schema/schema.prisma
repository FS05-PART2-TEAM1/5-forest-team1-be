generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum AccountStatus {
    ACTIVE
    FROZEN
    CLOSED
}

model Study {
    id                 String   @id @default(uuid())
    name               String
    password           String
    description        String
    backgroundImageUrl String
    point              Int      @default(0)
    createdAt          DateTime @default(now())
    updatedAt          DateTime @updatedAt

    ///reactions      Reaction[]
    ///  habits         Habit[]
    ///CompletedHabit CompletedHabit[]
}

model Reaction {
    id        String   @id @default(uuid())
    studyId   String
    emoji     String
    count     Int      @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ///study Study @relation(fields: [studyId], references: [id], onDelete: Cascade)

    @@index([studyId])
}

model Habit {
    id        String    @id @default(uuid())
    studyId   String
    name      String
    deletedAt DateTime?
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt

    ///study     Study            @relation(fields: [studyId], references: [id], onDelete: Cascade)
    ///  completed CompletedHabit[]

    @@index([studyId])
}

model CompletedHabit {
    id          String   @id @default(uuid())
    studyId     String
    habitId     String
    completedAt DateTime

    ///study Study @relation(fields: [studyId], references: [id], onDelete: Cascade)
    ///  habit Habit @relation(fields: [habitId], references: [id], onDelete: Cascade)

    @@index([studyId])
    @@index([habitId])
}
